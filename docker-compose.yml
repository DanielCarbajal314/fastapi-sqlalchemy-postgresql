version: '3.9'

services:

  server:
    build: 
      context: backend
      target: dev
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    volumes:
      - ./backend/src:/code/src
    ports:
      - ${API_SERVER_PORT}:8000
    depends_on:
      seed:
        condition: service_completed_successfully

  migration:
    build: 
      context: backend
      target: migration
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    depends_on:
      db:
        condition: service_healthy

  seed:
    build: 
      context: backend
      target: seed
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
    depends_on:
      migration:
        condition: service_completed_successfully

  db:
    image: postgres
    restart: always
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 1s

  http-client:
    image: badouralix/curl-jq
    tty: true
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - ${PGADMIN_PORT}:80
    user: root
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    configs:
      - source: serversjson
        target: /pgadmin4/servers.json
      - source: pgpasss
        target: /pgpass
    depends_on:
      seed:
        condition: service_completed_successfully

configs:
  pgpasss:
    content: db:${POSTGRES_PORT}:*:${POSTGRES_USER}:${POSTGRES_PASSWORD}
  serversjson:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "My Local Postgres 16.1",
        "Host": "db",
        "Port": ${POSTGRES_PORT},
        "MaintenanceDB": "postgres",
        "Username": "${POSTGRES_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}